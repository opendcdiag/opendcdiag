name: Pull Request

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: [ main, socket-separation ]

env:
  GIT_CONFIG_SYSTEM: /tmp/gitconfig

permissions:
  contents: read

jobs:
  Linux:
    runs-on: ubuntu-24.04${{ matrix.archsuffix }}
    container: debian:sid
    strategy:
      matrix:
        include:
        - { name: GCC, unittests: "unittests", selftests: "selftests" }
        - { name: Clang, unittests: "unittests", env: "CC=clang-19 CXX=clang++-19" }
        - { archsuffix: "-arm", selftests: "selftests" }
    steps:
    - name: setup environment
      run: printf '%s\n' ${{ matrix.env }} | tee -a ${GITHUB_ENV}
    - name: Install distro packages
      run: |
        DEBIAN_FRONTEND=noninteractive apt-get -y update
        DEBIAN_FRONTEND=noninteractive apt-get -y install \
            bats \
            ca-certificates \
            ${CC} \
            elfutils \
            file \
            git \
            libboost-dev \
            libeigen3-dev \
            libgtest-dev \
            libhwloc-dev \
            libssl-dev \
            libzstd-dev \
            meson \
            ninja-build \
            python3-yaml \
            zlib1g-dev 
    - uses: actions/checkout@v4
    - name: meson setup
      run: meson setup builddir -Dssl_link_type=dynamic -Dbuildtype=debugoptimized
    - name: ninja build
      run: ninja -C builddir
    - uses: actions/upload-artifact@v4
      with:
        name: linux-${{ matrix.name }}-binary
        path: builddir/opendcdiag
        retention-days: 3
    - name: confirm opendcdiag runs
      run: |
        builddir/opendcdiag --version
        builddir/opendcdiag --dump-cpu-info
    - name: ninja build unittests
      if: ${{ matrix.unittests }}
      run: ninja -C builddir unittests
    - name: run unittests
      if: ${{ matrix.unittests }}
      run: |
        ./builddir/unittests \
          --gtest_filter=-LinuxThermalFixture.CurrentMachine_TestUsingSingletomTemperaturesOnCurrentMachine # this test doesn't execute properly in a github runner
    - name: run selftests
      if: ${{ matrix.selftests }}
      run: |
        ulimit -St 120
        SANDSTONE_BIN=builddir/opendcdiag bats -t bats/sanity-check
    - name: run tests quickly
      run: |
        ulimit -St 120
        nproc=`nproc`
        nproc=$((nproc > 4 ? 4 : nproc))
        builddir/opendcdiag --quick -n$nproc --retest-on-failure=0 -o -
    - name: upload test run logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: test-linux-${{ matrix.name }}-logs
        if-no-files-found: ignore
        path: |
          *.yaml
        retention-days: 3


  Windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Install distro packages
      uses: msys2/setup-msys2@v2
      with:
        msystem: ucrt64
        cache: true
        release: false
        install: >-
            git
            mingw-w64-ucrt-x86_64-boost
            mingw-w64-ucrt-x86_64-cmake
            mingw-w64-ucrt-x86_64-eigen3
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-hwloc
            mingw-w64-ucrt-x86_64-meson
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-python-yaml
            mingw-w64-ucrt-x86_64-zlib
            mingw-w64-ucrt-x86_64-zstd
    - uses: actions/checkout@v4
    - name: install Bats
      uses: actions/checkout@v4
      with:
        repository: bats-core/bats-core
        ref: v1.11.1
        path: bats-core
        fetch-depth: 1
    - name: meson setup
      run: |
        meson setup builddir-windows \
              -Dbuildtype=release \
              -Ddependency_link=static
    - name: ninja build
      run: ninja -C builddir-windows
    - name: List DLL dependencies
      run: objdump -p builddir-windows/opendcdiag.exe | grep DLL\ Name
    - uses: actions/upload-artifact@v4
      with:
        name: windows-binary
        path: builddir-windows/opendcdiag.exe
        retention-days: 3
    - name: confirm OpenDCDiag runs
      run: |
        builddir-windows/opendcdiag --version
        builddir-windows/opendcdiag --dump-cpu-info
    - name: run selftests
      run: SANDSTONE_BIN=builddir-windows/opendcdiag.exe bats-core/bin/bats -t bats/sanity-check
    - name: run tests quickly
      run: |
        nproc=`nproc`
        nproc=$((nproc > 4 ? 4 : nproc))
        builddir-windows/opendcdiag --quick -n$nproc --retest-on-failure=0 -o -
    - name: upload test run logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: test-windows-logs
        if-no-files-found: ignore
        path: |
          *.yaml
        retention-days: 3
