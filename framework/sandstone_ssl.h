/*
 * Copyright 2022 Intel Corporation.
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef SANDSTONE_SSL_H
#define SANDSTONE_SSL_H

#include <sandstone.h>
#include <openssl/aes.h>
#include <openssl/blowfish.h>
#include <openssl/cmac.h>
#include <openssl/crypto.h>
#include <openssl/evp.h>
#include <openssl/hmac.h>
#include <openssl/md5.h>
//#include <openssl/mdc2.h>
//#include <openssl/ripemd.h>
#include <openssl/rsa.h>
#include <openssl/sha.h>
//#include <openssl/whrlpool.h>

#define SANDSTONE_SSL_AES_FUNCTIONS(F)          \
    F(AES_bi_ige_encrypt)                       \
    F(AES_cbc_encrypt)                          \
    F(AES_cfb128_encrypt)                       \
    F(AES_cfb1_encrypt)                         \
    F(AES_cfb8_encrypt)                         \
    F(AES_decrypt)                              \
    F(AES_ecb_encrypt)                          \
    F(AES_encrypt)                              \
    F(AES_ige_encrypt)                          \
    F(AES_ofb128_encrypt)                       \
    F(AES_options)                              \
    F(AES_set_decrypt_key)                      \
    F(AES_set_encrypt_key)                      \
    F(AES_unwrap_key)                           \
    F(AES_wrap_key)                             \
    /**/

#define SANDSTONE_SSL_BF_FUNCTIONS(F)           \
    F(BF_cbc_encrypt)                           \
    F(BF_cfb64_encrypt)                         \
    F(BF_decrypt)                               \
    F(BF_ecb_encrypt)                           \
    F(BF_encrypt)                               \
    F(BF_ofb64_encrypt)                         \
    F(BF_options)                               \
    F(BF_set_key)                               \
    /**/

#define SANDSTONE_SSL_CMAC_FUNCTIONS(F)         \
    F(CMAC_CTX_cleanup)                         \
    F(CMAC_CTX_copy)                            \
    F(CMAC_CTX_free)                            \
    F(CMAC_CTX_get0_cipher_ctx)                 \
    F(CMAC_CTX_new)                             \
    F(CMAC_Final)                               \
    F(CMAC_Init)                                \
    F(CMAC_resume)                              \
    F(CMAC_Update)                              \
    /**/

#define SANDSTONE_SSL_CRYPTO_FUNCTIONS(F)       \
    F(CRYPTO_128_unwrap)                        \
    F(CRYPTO_128_unwrap_pad)                    \
    F(CRYPTO_128_wrap)                          \
    F(CRYPTO_128_wrap_pad)                      \
    F(CRYPTO_atomic_add)                        \
    F(CRYPTO_cbc128_decrypt)                    \
    F(CRYPTO_cbc128_encrypt)                    \
    F(CRYPTO_ccm128_aad)                        \
    F(CRYPTO_ccm128_decrypt)                    \
    F(CRYPTO_ccm128_decrypt_ccm64)              \
    F(CRYPTO_ccm128_encrypt)                    \
    F(CRYPTO_ccm128_encrypt_ccm64)              \
    F(CRYPTO_ccm128_init)                       \
    F(CRYPTO_ccm128_setiv)                      \
    F(CRYPTO_ccm128_tag)                        \
    F(CRYPTO_cfb128_1_encrypt)                  \
    F(CRYPTO_cfb128_8_encrypt)                  \
    F(CRYPTO_cfb128_encrypt)                    \
    F(CRYPTO_clear_free)                        \
    F(CRYPTO_clear_realloc)                     \
    F(CRYPTO_ctr128_encrypt)                    \
    F(CRYPTO_ctr128_encrypt_ctr32)              \
    F(CRYPTO_cts128_decrypt)                    \
    F(CRYPTO_cts128_decrypt_block)              \
    F(CRYPTO_cts128_encrypt)                    \
    F(CRYPTO_cts128_encrypt_block)              \
    F(CRYPTO_dup_ex_data)                       \
    F(CRYPTO_free)                              \
    F(CRYPTO_free_ex_data)                      \
    F(CRYPTO_free_ex_index)                     \
    F(CRYPTO_gcm128_aad)                        \
    F(CRYPTO_gcm128_decrypt)                    \
    F(CRYPTO_gcm128_decrypt_ctr32)              \
    F(CRYPTO_gcm128_encrypt)                    \
    F(CRYPTO_gcm128_encrypt_ctr32)              \
    F(CRYPTO_gcm128_finish)                     \
    F(CRYPTO_gcm128_init)                       \
    F(CRYPTO_gcm128_new)                        \
    F(CRYPTO_gcm128_release)                    \
    F(CRYPTO_gcm128_setiv)                      \
    F(CRYPTO_gcm128_tag)                        \
    F(CRYPTO_get_ex_data)                       \
    F(CRYPTO_get_ex_new_index)                  \
    F(CRYPTO_get_mem_functions)                 \
    F(CRYPTO_malloc)                            \
    F(CRYPTO_memcmp)                            \
    F(CRYPTO_mem_ctrl)                          \
    F(CRYPTO_memdup)                            \
    F(CRYPTO_new_ex_data)                       \
    F(CRYPTO_nistcts128_decrypt)                \
    F(CRYPTO_nistcts128_decrypt_block)          \
    F(CRYPTO_nistcts128_encrypt)                \
    F(CRYPTO_nistcts128_encrypt_block)          \
    F(CRYPTO_ocb128_aad)                        \
    F(CRYPTO_ocb128_cleanup)                    \
    F(CRYPTO_ocb128_copy_ctx)                   \
    F(CRYPTO_ocb128_decrypt)                    \
    F(CRYPTO_ocb128_encrypt)                    \
    F(CRYPTO_ocb128_finish)                     \
    F(CRYPTO_ocb128_init)                       \
    F(CRYPTO_ocb128_new)                        \
    F(CRYPTO_ocb128_setiv)                      \
    F(CRYPTO_ocb128_tag)                        \
    F(CRYPTO_ofb128_encrypt)                    \
    F(CRYPTO_realloc)                           \
    F(CRYPTO_secure_actual_size)                \
    F(CRYPTO_secure_allocated)                  \
    F(CRYPTO_secure_clear_free)                 \
    F(CRYPTO_secure_free)                       \
    F(CRYPTO_secure_malloc)                     \
    F(CRYPTO_secure_malloc_done)                \
    F(CRYPTO_secure_malloc_init)                \
    F(CRYPTO_secure_malloc_initialized)         \
    F(CRYPTO_secure_used)                       \
    F(CRYPTO_secure_zalloc)                     \
    F(CRYPTO_set_ex_data)                       \
    F(CRYPTO_set_mem_debug)                     \
    F(CRYPTO_set_mem_functions)                 \
    F(CRYPTO_strdup)                            \
    F(CRYPTO_strndup)                           \
    F(CRYPTO_THREAD_cleanup_local)              \
    F(CRYPTO_THREAD_compare_id)                 \
    F(CRYPTO_THREAD_get_current_id)             \
    F(CRYPTO_THREAD_get_local)                  \
    F(CRYPTO_THREAD_init_local)                 \
    F(CRYPTO_THREAD_lock_free)                  \
    F(CRYPTO_THREAD_lock_new)                   \
    F(CRYPTO_THREAD_read_lock)                  \
    F(CRYPTO_THREAD_run_once)                   \
    F(CRYPTO_THREAD_set_local)                  \
    F(CRYPTO_THREAD_unlock)                     \
    F(CRYPTO_THREAD_write_lock)                 \
    F(CRYPTO_xts128_encrypt)                    \
    F(CRYPTO_zalloc)                            \
    /**/

#define SANDSTONE_SSL_HMAC_FUNCTIONS(F)         \
    F(HMAC)                                     \
    F(HMAC_CTX_copy)                            \
    F(HMAC_CTX_free)                            \
    F(HMAC_CTX_get_md)                          \
    F(HMAC_CTX_new)                             \
    F(HMAC_CTX_reset)                           \
    F(HMAC_CTX_set_flags)                       \
    F(HMAC_Final)                               \
    /*F(HMAC_Init)*/                            \
    F(HMAC_Init_ex)                             \
    F(HMAC_size)                                \
    F(HMAC_Update)                              \
    /**/

#define SANDSTONE_SSL_EVP_FUNCTIONS(F)          \
    F(EVP_aes_128_cbc_hmac_sha1)                \
    F(EVP_aes_128_cbc_hmac_sha256)              \
    F(EVP_aes_128_ccm)                          \
    F(EVP_aes_128_gcm)                          \
    F(EVP_aes_192_ccm)                          \
    F(EVP_aes_192_gcm)                          \
    F(EVP_aes_256_cbc_hmac_sha1)                \
    F(EVP_aes_256_cbc_hmac_sha256)              \
    F(EVP_aes_256_ccm)                          \
    F(EVP_aes_256_gcm)                          \
    F(EVP_bf_cbc)                               \
    F(EVP_bf_cfb)                               \
    F(EVP_bf_ecb)                               \
    F(EVP_bf_ofb)                               \
    F(EVP_BytesToKey)                           \
    F(EVP_cast5_cbc)                            \
    F(EVP_cast5_cfb)                            \
    F(EVP_cast5_ecb)                            \
    F(EVP_cast5_ofb)                            \
    F(EVP_CipherFinal_ex)                       \
    F(EVP_CipherFinal)                          \
    F(EVP_CipherInit_ex)                        \
    F(EVP_CipherInit)                           \
    F(EVP_CipherUpdate)                         \
    F(EVP_DecodeBlock)                          \
    F(EVP_DecodeFinal)                          \
    F(EVP_DecodeInit)                           \
    F(EVP_DecodeUpdate)                         \
    F(EVP_DecryptFinal_ex)                      \
    F(EVP_DecryptFinal)                         \
    F(EVP_DecryptInit_ex)                       \
    F(EVP_DecryptInit)                          \
    F(EVP_DecryptUpdate)                        \
    F(EVP_des_cbc)                              \
    F(EVP_des_cfb)                              \
    F(EVP_des_ecb)                              \
    F(EVP_des_ede3_cbc)                         \
    F(EVP_des_ede3_cfb)                         \
    F(EVP_des_ede3)                             \
    F(EVP_des_ede3_ofb)                         \
    F(EVP_des_ede_cbc)                          \
    F(EVP_des_ede_cfb)                          \
    F(EVP_des_ede)                              \
    F(EVP_des_ede_ofb)                          \
    F(EVP_des_ofb)                              \
    F(EVP_desx_cbc)                             \
    F(EVP_DigestFinal_ex)                       \
    F(EVP_DigestFinal)                          \
    F(EVP_DigestInit_ex)                        \
    F(EVP_DigestInit)                           \
    F(EVP_DigestSignFinal)                      \
    F(EVP_DigestSignInit)                       \
    F(EVP_DigestUpdate)                         \
    F(EVP_DigestVerifyFinal)                    \
    F(EVP_DigestVerifyInit)                     \
    F(EVP_enc_null)                             \
    F(EVP_EncodeBlock)                          \
    F(EVP_EncodeFinal)                          \
    F(EVP_EncodeInit)                           \
    F(EVP_EncodeUpdate)                         \
    F(EVP_EncryptFinal_ex)                      \
    F(EVP_EncryptFinal)                         \
    F(EVP_EncryptInit_ex)                       \
    F(EVP_EncryptInit)                          \
    F(EVP_EncryptUpdate)                        \
    F(EVP_get_cipherbyname)                     \
    F(EVP_get_digestbyname)                     \
    F(EVP_MD_CTX_new)                           \
    /**/

#define SANDSTONE_SSL_MD5_FUNCTIONS(F)          \
    F(MD5)                                      \
    F(MD5_Final)                                \
    F(MD5_Init)                                 \
    F(MD5_Transform)                            \
    F(MD5_Update)                               \
    /**/

#define SANDSTONE_SSL_MDC2_FUNCTIONS(F)         \
    F(MDC2)                                     \
    F(MDC2_Final)                               \
    F(MDC2_Init)                                \
    F(MDC2_Update)                              \
    /**/

#define SANDSTONE_SSL_GENERIC_FUNCTIONS(F)      \
    F(OPENSSL_init)                             \
    F(OPENSSL_init_crypto)                      \
    F(OPENSSL_INIT_free)                        \
    F(OPENSSL_INIT_new)                         \
    F(OPENSSL_INIT_set_config_appname)          \
    F(OPENSSL_INIT_set_config_file_flags)       \
    F(OPENSSL_INIT_set_config_filename)         \
    F(OpenSSL_version)                          \
    F(OpenSSL_version_num)                      \
    /**/

#define SANDSTONE_SSL_RIPEMD160_FUNCTIONS(F)    \
    F(RIPEMD160)                                \
    F(RIPEMD160_Final)                          \
    F(RIPEMD160_Init)                           \
    F(RIPEMD160_Transform)                      \
    F(RIPEMD160_Update)                         \
    /**/

#define SANDSTONE_SSL_RSA_FUNCTIONS(F)          \
    F(RSA_bits)                                 \
    F(RSA_blinding_off)                         \
    F(RSA_blinding_on)                          \
    F(RSA_check_key)                            \
    F(RSA_check_key_ex)                         \
    F(RSA_clear_flags)                          \
    F(RSA_flags)                                \
    F(RSA_free)                                 \
    /*F(RSA_generate_key)*/                     \
    F(RSA_generate_key_ex)                      \
    F(RSA_generate_multi_prime_key)             \
    F(RSA_get0_crt_params)                      \
    F(RSA_get0_d)                               \
    F(RSA_get0_dmp1)                            \
    F(RSA_get0_dmq1)                            \
    F(RSA_get0_e)                               \
    F(RSA_get0_engine)                          \
    F(RSA_get0_factors)                         \
    F(RSA_get0_iqmp)                            \
    F(RSA_get0_key)                             \
    F(RSA_get0_multi_prime_crt_params)          \
    F(RSA_get0_multi_prime_factors)             \
    F(RSA_get0_n)                               \
    F(RSA_get0_p)                               \
    F(RSA_get0_pss_params)                      \
    F(RSA_get0_q)                               \
    F(RSA_get_default_method)                   \
    F(RSA_get_ex_data)                          \
    F(RSA_get_method)                           \
    F(RSA_get_multi_prime_extra_count)          \
    F(RSA_get_version)                          \
    F(RSA_meth_dup)                             \
    F(RSA_meth_free)                            \
    F(RSA_meth_get0_app_data)                   \
    F(RSA_meth_get0_name)                       \
    F(RSA_meth_get_bn_mod_exp)                  \
    F(RSA_meth_get_finish)                      \
    F(RSA_meth_get_flags)                       \
    F(RSA_meth_get_init)                        \
    F(RSA_meth_get_keygen)                      \
    F(RSA_meth_get_mod_exp)                     \
    F(RSA_meth_get_multi_prime_keygen)          \
    F(RSA_meth_get_priv_dec)                    \
    F(RSA_meth_get_priv_enc)                    \
    F(RSA_meth_get_pub_dec)                     \
    F(RSA_meth_get_pub_enc)                     \
    F(RSA_meth_get_sign)                        \
    F(RSA_meth_get_verify)                      \
    F(RSA_meth_new)                             \
    F(RSA_meth_set0_app_data)                   \
    F(RSA_meth_set1_name)                       \
    F(RSA_meth_set_bn_mod_exp)                  \
    F(RSA_meth_set_finish)                      \
    F(RSA_meth_set_flags)                       \
    F(RSA_meth_set_init)                        \
    F(RSA_meth_set_keygen)                      \
    F(RSA_meth_set_mod_exp)                     \
    F(RSA_meth_set_multi_prime_keygen)          \
    F(RSA_meth_set_priv_dec)                    \
    F(RSA_meth_set_priv_enc)                    \
    F(RSA_meth_set_pub_dec)                     \
    F(RSA_meth_set_pub_enc)                     \
    F(RSA_meth_set_sign)                        \
    F(RSA_meth_set_verify)                      \
    F(RSA_new)                                  \
    F(RSA_new_method)                           \
    F(RSA_null_method)                          \
    F(RSA_OAEP_PARAMS_free)                     \
    F(RSA_OAEP_PARAMS_new)                      \
    /*F(RSA_padding_add_none)*/                 \
    F(RSA_padding_add_PKCS1_OAEP)               \
    F(RSA_padding_add_PKCS1_OAEP_mgf1)          \
    F(RSA_padding_add_PKCS1_PSS)                \
    F(RSA_padding_add_PKCS1_PSS_mgf1)           \
    F(RSA_padding_add_PKCS1_type_1)             \
    F(RSA_padding_add_PKCS1_type_2)             \
    /*F(RSA_padding_add_SSLv23)*/               \
    F(RSA_padding_add_X931)                     \
    F(RSA_padding_check_none)                   \
    F(RSA_padding_check_PKCS1_OAEP)             \
    F(RSA_padding_check_PKCS1_OAEP_mgf1)        \
    F(RSA_padding_check_PKCS1_type_1)           \
    F(RSA_padding_check_PKCS1_type_2)           \
    /*F(RSA_padding_check_SSLv23)*/             \
    F(RSA_padding_check_X931)                   \
    F(RSA_PKCS1_OpenSSL)                        \
    F(RSA_pkey_ctx_ctrl)                        \
    F(RSA_print)                                \
    F(RSA_print_fp)                             \
    F(RSA_private_decrypt)                      \
    F(RSA_private_encrypt)                      \
    F(RSAPrivateKey_dup)                        \
    F(RSA_PSS_PARAMS_free)                      \
    F(RSA_PSS_PARAMS_new)                       \
    F(RSA_public_decrypt)                       \
    F(RSA_public_encrypt)                       \
    F(RSAPublicKey_dup)                         \
    F(RSA_security_bits)                        \
    F(RSA_set0_crt_params)                      \
    F(RSA_set0_factors)                         \
    F(RSA_set0_key)                             \
    F(RSA_set0_multi_prime_params)              \
    F(RSA_set_default_method)                   \
    F(RSA_set_ex_data)                          \
    F(RSA_set_flags)                            \
    F(RSA_set_method)                           \
    F(RSA_setup_blinding)                       \
    F(RSA_sign)                                 \
    F(RSA_sign_ASN1_OCTET_STRING)               \
    F(RSA_size)                                 \
    F(RSA_test_flags)                           \
    F(RSA_up_ref)                               \
    F(RSA_verify)                               \
    F(RSA_verify_ASN1_OCTET_STRING)             \
    F(RSA_verify_PKCS1_PSS)                     \
    F(RSA_verify_PKCS1_PSS_mgf1)                \
    F(RSA_X931_derive_ex)                       \
    F(RSA_X931_generate_key_ex)                 \
    F(RSA_X931_hash_id)                         \
    /**/

#define SANDSTONE_SSL_SHA_FUNCTIONS(F)          \
    F(SHA1)                                     \
    F(SHA1_Final)                               \
    F(SHA1_Init)                                \
    F(SHA1_Transform)                           \
    F(SHA1_Update)                              \
    F(SHA224)                                   \
    F(SHA224_Final)                             \
    F(SHA224_Init)                              \
    F(SHA224_Update)                            \
    F(SHA256)                                   \
    F(SHA256_Final)                             \
    F(SHA256_Init)                              \
    F(SHA256_Transform)                         \
    F(SHA256_Update)                            \
    F(SHA384)                                   \
    F(SHA384_Final)                             \
    F(SHA384_Init)                              \
    F(SHA384_Update)                            \
    F(SHA512)                                   \
    F(SHA512_Final)                             \
    F(SHA512_Init)                              \
    F(SHA512_Transform)                         \
    F(SHA512_Update)                            \
    /**/

#define SANDSTONE_SSL_WHIRLPOOL_FUNCTIONS(F)    \
    F(WHIRLPOOL)                                \
    F(WHIRLPOOL_BitUpdate)                      \
    F(WHIRLPOOL_Final)                          \
    F(WHIRLPOOL_Init)                           \
    F(WHIRLPOOL_Update)                         \
    /**/

#define SANDSTONE_SSL_X509_FUNCTIONS(F)         \
    F(X509_add1_ext_i2d)                        \
    F(X509_add1_reject_object)                  \
    F(X509_add1_trust_object)                   \
    F(X509_add_ext)                             \
    F(X509_ALGOR_cmp)                           \
    F(X509_ALGOR_copy)                          \
    F(X509_ALGOR_dup)                           \
    F(X509_ALGOR_free)                          \
    F(X509_ALGOR_get0)                          \
    F(X509_ALGOR_new)                           \
    F(X509_ALGOR_set0)                          \
    F(X509_ALGOR_set_md)                        \
    F(X509_alias_get0)                          \
    F(X509_alias_set1)                          \
    F(X509at_add1_attr)                         \
    F(X509at_add1_attr_by_NID)                  \
    F(X509at_add1_attr_by_OBJ)                  \
    F(X509at_add1_attr_by_txt)                  \
    F(X509at_delete_attr)                       \
    F(X509at_get0_data_by_OBJ)                  \
    F(X509at_get_attr)                          \
    F(X509at_get_attr_by_NID)                   \
    F(X509at_get_attr_by_OBJ)                   \
    F(X509at_get_attr_count)                    \
    F(X509_ATTRIBUTE_count)                     \
    F(X509_ATTRIBUTE_create)                    \
    F(X509_ATTRIBUTE_create_by_NID)             \
    F(X509_ATTRIBUTE_create_by_OBJ)             \
    F(X509_ATTRIBUTE_create_by_txt)             \
    F(X509_ATTRIBUTE_dup)                       \
    F(X509_ATTRIBUTE_free)                      \
    F(X509_ATTRIBUTE_get0_data)                 \
    F(X509_ATTRIBUTE_get0_object)               \
    F(X509_ATTRIBUTE_get0_type)                 \
    F(X509_ATTRIBUTE_new)                       \
    F(X509_ATTRIBUTE_set1_data)                 \
    F(X509_ATTRIBUTE_set1_object)               \
    F(X509_aux_print)                           \
    F(X509_CERT_AUX_free)                       \
    F(X509_CERT_AUX_new)                        \
    F(X509_certificate_type)                    \
    F(X509_chain_check_suiteb)                  \
    F(X509_chain_up_ref)                        \
    F(X509_check_akid)                          \
    F(X509_check_ca)                            \
    F(X509_check_email)                         \
    F(X509_check_host)                          \
    F(X509_check_ip)                            \
    F(X509_check_ip_asc)                        \
    F(X509_check_issued)                        \
    F(X509_check_private_key)                   \
    F(X509_check_purpose)                       \
    F(X509_check_trust)                         \
    F(X509_CINF_free)                           \
    F(X509_CINF_new)                            \
    F(X509_cmp)                                 \
    F(X509_cmp_current_time)                    \
    F(X509_cmp_time)                            \
    F(X509_CRL_add0_revoked)                    \
    F(X509_CRL_add1_ext_i2d)                    \
    F(X509_CRL_add_ext)                         \
    F(X509_CRL_check_suiteb)                    \
    F(X509_CRL_cmp)                             \
    F(X509_CRL_delete_ext)                      \
    F(X509_CRL_diff)                            \
    F(X509_CRL_digest)                          \
    F(X509_CRL_dup)                             \
    F(X509_CRL_free)                            \
    F(X509_CRL_get0_by_cert)                    \
    F(X509_CRL_get0_by_serial)                  \
    F(X509_CRL_get0_extensions)                 \
    F(X509_CRL_get0_lastUpdate)                 \
    F(X509_CRL_get0_nextUpdate)                 \
    F(X509_CRL_get0_signature)                  \
    F(X509_CRL_get_ext)                         \
    F(X509_CRL_get_ext_by_critical)             \
    F(X509_CRL_get_ext_by_NID)                  \
    F(X509_CRL_get_ext_by_OBJ)                  \
    F(X509_CRL_get_ext_count)                   \
    F(X509_CRL_get_ext_d2i)                     \
    F(X509_CRL_get_issuer)                      \
    F(X509_CRL_get_lastUpdate)                  \
    F(X509_CRL_get_meth_data)                   \
    F(X509_CRL_get_nextUpdate)                  \
    F(X509_CRL_get_REVOKED)                     \
    F(X509_CRL_get_signature_nid)               \
    F(X509_CRL_get_version)                     \
    F(X509_CRL_http_nbio)                       \
    F(X509_CRL_INFO_free)                       \
    F(X509_CRL_INFO_new)                        \
    F(X509_CRL_match)                           \
    F(X509_CRL_METHOD_free)                     \
    F(X509_CRL_METHOD_new)                      \
    F(X509_CRL_new)                             \
    F(X509_CRL_print)                           \
    F(X509_CRL_print_ex)                        \
    F(X509_CRL_print_fp)                        \
    F(X509_CRL_set1_lastUpdate)                 \
    F(X509_CRL_set1_nextUpdate)                 \
    F(X509_CRL_set_default_method)              \
    F(X509_CRL_set_issuer_name)                 \
    F(X509_CRL_set_meth_data)                   \
    F(X509_CRL_set_version)                     \
    F(X509_CRL_sign)                            \
    F(X509_CRL_sign_ctx)                        \
    F(X509_CRL_sort)                            \
    F(X509_CRL_up_ref)                          \
    F(X509_CRL_verify)                          \
    F(X509_delete_ext)                          \
    F(X509_digest)                              \
    F(X509_dup)                                 \
    F(X509_email_free)                          \
    F(X509_EXTENSION_create_by_NID)             \
    F(X509_EXTENSION_create_by_OBJ)             \
    F(X509_EXTENSION_dup)                       \
    F(X509_EXTENSION_free)                      \
    F(X509_EXTENSION_get_critical)              \
    F(X509_EXTENSION_get_data)                  \
    F(X509_EXTENSION_get_object)                \
    F(X509_EXTENSION_new)                       \
    F(X509_EXTENSION_set_critical)              \
    F(X509_EXTENSION_set_data)                  \
    F(X509_EXTENSION_set_object)                \
    F(X509_find_by_issuer_and_serial)           \
    F(X509_find_by_subject)                     \
    F(X509_free)                                \
    F(X509_get0_authority_issuer)               \
    F(X509_get0_authority_key_id)               \
    F(X509_get0_authority_serial)               \
    F(X509_get0_extensions)                     \
    F(X509_get0_notAfter)                       \
    F(X509_get0_notBefore)                      \
    F(X509_get0_pubkey)                         \
    F(X509_get0_pubkey_bitstr)                  \
    F(X509_get0_reject_objects)                 \
    F(X509_get0_serialNumber)                   \
    F(X509_get0_signature)                      \
    F(X509_get0_subject_key_id)                 \
    F(X509_get0_tbs_sigalg)                     \
    F(X509_get0_trust_objects)                  \
    F(X509_get0_uids)                           \
    F(X509_get1_email)                          \
    F(X509_get1_ocsp)                           \
    F(X509_get_default_cert_area)               \
    F(X509_get_default_cert_dir)                \
    F(X509_get_default_cert_dir_env)            \
    F(X509_get_default_cert_file)               \
    F(X509_get_default_cert_file_env)           \
    F(X509_get_default_private_dir)             \
    F(X509_get_ex_data)                         \
    F(X509_get_ext)                             \
    F(X509_get_ext_by_critical)                 \
    F(X509_get_ext_by_NID)                      \
    F(X509_get_ext_by_OBJ)                      \
    F(X509_get_ext_count)                       \
    F(X509_get_ext_d2i)                         \
    F(X509_get_extended_key_usage)              \
    F(X509_get_extension_flags)                 \
    F(X509_get_issuer_name)                     \
    F(X509_get_key_usage)                       \
    F(X509_getm_notAfter)                       \
    F(X509_getm_notBefore)                      \
    F(X509_get_pathlen)                         \
    F(X509_get_proxy_pathlen)                   \
    F(X509_get_pubkey)                          \
    F(X509_get_pubkey_parameters)               \
    F(X509_get_serialNumber)                    \
    F(X509_get_signature_info)                  \
    F(X509_get_signature_nid)                   \
    F(X509_get_signature_type)                  \
    F(X509_get_subject_name)                    \
    F(X509_get_version)                         \
    F(X509_get_X509_PUBKEY)                     \
    F(X509_gmtime_adj)                          \
    F(X509_http_nbio)                           \
    F(X509_INFO_free)                           \
    F(X509_INFO_new)                            \
    F(X509_issuer_and_serial_cmp)               \
    F(X509_issuer_and_serial_hash)              \
    F(X509_issuer_name_cmp)                     \
    F(X509_issuer_name_hash)                    \
    F(X509_issuer_name_hash_old)                \
    F(X509_keyid_get0)                          \
    F(X509_keyid_set1)                          \
    F(X509_load_cert_crl_file)                  \
    F(X509_load_cert_file)                      \
    F(X509_load_crl_file)                       \
    F(X509_LOOKUP_by_alias)                     \
    F(X509_LOOKUP_by_fingerprint)               \
    F(X509_LOOKUP_by_issuer_serial)             \
    F(X509_LOOKUP_by_subject)                   \
    F(X509_LOOKUP_ctrl)                         \
    F(X509_LOOKUP_file)                         \
    F(X509_LOOKUP_free)                         \
    F(X509_LOOKUP_get_method_data)              \
    F(X509_LOOKUP_get_store)                    \
    F(X509_LOOKUP_hash_dir)                     \
    F(X509_LOOKUP_init)                         \
    F(X509_LOOKUP_meth_free)                    \
    F(X509_LOOKUP_meth_get_ctrl)                \
    F(X509_LOOKUP_meth_get_free)                \
    F(X509_LOOKUP_meth_get_get_by_alias)        \
    F(X509_LOOKUP_meth_get_get_by_fingerprint)  \
    F(X509_LOOKUP_meth_get_get_by_issuer_serial) \
    F(X509_LOOKUP_meth_get_get_by_subject)      \
    F(X509_LOOKUP_meth_get_init)                \
    F(X509_LOOKUP_meth_get_new_item)            \
    F(X509_LOOKUP_meth_get_shutdown)            \
    F(X509_LOOKUP_meth_new)                     \
    F(X509_LOOKUP_meth_set_ctrl)                \
    F(X509_LOOKUP_meth_set_free)                \
    F(X509_LOOKUP_meth_set_get_by_alias)        \
    F(X509_LOOKUP_meth_set_get_by_fingerprint)  \
    F(X509_LOOKUP_meth_set_get_by_issuer_serial) \
    F(X509_LOOKUP_meth_set_get_by_subject)      \
    F(X509_LOOKUP_meth_set_init)                \
    F(X509_LOOKUP_meth_set_new_item)            \
    F(X509_LOOKUP_meth_set_shutdown)            \
    F(X509_LOOKUP_new)                          \
    F(X509_LOOKUP_set_method_data)              \
    F(X509_LOOKUP_shutdown)                     \
    F(X509_NAME_add_entry)                      \
    F(X509_NAME_add_entry_by_NID)               \
    F(X509_NAME_add_entry_by_OBJ)               \
    F(X509_NAME_add_entry_by_txt)               \
    F(X509_NAME_cmp)                            \
    F(X509_NAME_delete_entry)                   \
    F(X509_NAME_digest)                         \
    F(X509_NAME_dup)                            \
    F(X509_NAME_entry_count)                    \
    F(X509_NAME_ENTRY_create_by_NID)            \
    F(X509_NAME_ENTRY_create_by_OBJ)            \
    F(X509_NAME_ENTRY_create_by_txt)            \
    F(X509_NAME_ENTRY_dup)                      \
    F(X509_NAME_ENTRY_free)                     \
    F(X509_NAME_ENTRY_get_data)                 \
    F(X509_NAME_ENTRY_get_object)               \
    F(X509_NAME_ENTRY_new)                      \
    F(X509_NAME_ENTRY_set)                      \
    F(X509_NAME_ENTRY_set_data)                 \
    F(X509_NAME_ENTRY_set_object)               \
    F(X509_NAME_free)                           \
    F(X509_NAME_get0_der)                       \
    F(X509_NAME_get_entry)                      \
    F(X509_NAME_get_index_by_NID)               \
    F(X509_NAME_get_index_by_OBJ)               \
    F(X509_NAME_get_text_by_NID)                \
    F(X509_NAME_get_text_by_OBJ)                \
    F(X509_NAME_hash)                           \
    F(X509_NAME_hash_old)                       \
    F(X509_NAME_new)                            \
    F(X509_NAME_oneline)                        \
    F(X509_NAME_print)                          \
    F(X509_NAME_print_ex)                       \
    F(X509_NAME_print_ex_fp)                    \
    F(X509_NAME_set)                            \
    F(X509_new)                                 \
    F(X509_OBJECT_free)                         \
    F(X509_OBJECT_get0_X509)                    \
    F(X509_OBJECT_get0_X509_CRL)                \
    F(X509_OBJECT_get_type)                     \
    F(X509_OBJECT_idx_by_subject)               \
    F(X509_OBJECT_new)                          \
    F(X509_OBJECT_retrieve_by_subject)          \
    F(X509_OBJECT_retrieve_match)               \
    F(X509_OBJECT_set1_X509)                    \
    F(X509_OBJECT_set1_X509_CRL)                \
    F(X509_OBJECT_up_ref_count)                 \
    F(X509_ocspid_print)                        \
    F(X509_PKEY_free)                           \
    F(X509_PKEY_new)                            \
    F(X509_policy_check)                        \
    F(X509_policy_level_get0_node)              \
    F(X509_policy_level_node_count)             \
    F(X509_policy_node_get0_parent)             \
    F(X509_policy_node_get0_policy)             \
    F(X509_policy_node_get0_qualifiers)         \
    F(X509_POLICY_NODE_print)                   \
    F(X509_policy_tree_free)                    \
    F(X509_policy_tree_get0_level)              \
    F(X509_policy_tree_get0_policies)           \
    F(X509_policy_tree_get0_user_policies)      \
    F(X509_policy_tree_level_count)             \
    F(X509_print)                               \
    F(X509_print_ex)                            \
    F(X509_print_ex_fp)                         \
    F(X509_print_fp)                            \
    F(X509_pubkey_digest)                       \
    F(X509_PUBKEY_free)                         \
    F(X509_PUBKEY_get)                          \
    F(X509_PUBKEY_get0)                         \
    F(X509_PUBKEY_get0_param)                   \
    F(X509_PUBKEY_new)                          \
    F(X509_PUBKEY_set)                          \
    F(X509_PUBKEY_set0_param)                   \
    F(X509_PURPOSE_add)                         \
    F(X509_PURPOSE_cleanup)                     \
    F(X509_PURPOSE_get0)                        \
    F(X509_PURPOSE_get0_name)                   \
    F(X509_PURPOSE_get0_sname)                  \
    F(X509_PURPOSE_get_by_id)                   \
    F(X509_PURPOSE_get_by_sname)                \
    F(X509_PURPOSE_get_count)                   \
    F(X509_PURPOSE_get_id)                      \
    F(X509_PURPOSE_get_trust)                   \
    F(X509_PURPOSE_set)                         \
    F(X509_reject_clear)                        \
    F(X509_REQ_add1_attr)                       \
    F(X509_REQ_add1_attr_by_NID)                \
    F(X509_REQ_add1_attr_by_OBJ)                \
    F(X509_REQ_add1_attr_by_txt)                \
    F(X509_REQ_add_extensions)                  \
    F(X509_REQ_add_extensions_nid)              \
    F(X509_REQ_check_private_key)               \
    F(X509_REQ_delete_attr)                     \
    F(X509_REQ_digest)                          \
    F(X509_REQ_dup)                             \
    F(X509_REQ_extension_nid)                   \
    F(X509_REQ_free)                            \
    F(X509_REQ_get0_pubkey)                     \
    F(X509_REQ_get0_signature)                  \
    F(X509_REQ_get1_email)                      \
    F(X509_REQ_get_attr)                        \
    F(X509_REQ_get_attr_by_NID)                 \
    F(X509_REQ_get_attr_by_OBJ)                 \
    F(X509_REQ_get_attr_count)                  \
    F(X509_REQ_get_extension_nids)              \
    F(X509_REQ_get_extensions)                  \
    F(X509_REQ_get_pubkey)                      \
    F(X509_REQ_get_signature_nid)               \
    F(X509_REQ_get_subject_name)                \
    F(X509_REQ_get_version)                     \
    F(X509_REQ_get_X509_PUBKEY)                 \
    F(X509_REQ_INFO_free)                       \
    F(X509_REQ_INFO_new)                        \
    F(X509_REQ_new)                             \
    F(X509_REQ_print)                           \
    F(X509_REQ_print_ex)                        \
    F(X509_REQ_print_fp)                        \
    F(X509_REQ_set0_signature)                  \
    F(X509_REQ_set1_signature_algo)             \
    F(X509_REQ_set_extension_nids)              \
    F(X509_REQ_set_pubkey)                      \
    F(X509_REQ_set_subject_name)                \
    F(X509_REQ_set_version)                     \
    F(X509_REQ_sign)                            \
    F(X509_REQ_sign_ctx)                        \
    F(X509_REQ_to_X509)                         \
    F(X509_REQ_verify)                          \
    F(X509_REVOKED_add1_ext_i2d)                \
    F(X509_REVOKED_add_ext)                     \
    F(X509_REVOKED_delete_ext)                  \
    F(X509_REVOKED_dup)                         \
    F(X509_REVOKED_free)                        \
    F(X509_REVOKED_get0_extensions)             \
    F(X509_REVOKED_get0_revocationDate)         \
    F(X509_REVOKED_get0_serialNumber)           \
    F(X509_REVOKED_get_ext)                     \
    F(X509_REVOKED_get_ext_by_critical)         \
    F(X509_REVOKED_get_ext_by_NID)              \
    F(X509_REVOKED_get_ext_by_OBJ)              \
    F(X509_REVOKED_get_ext_count)               \
    F(X509_REVOKED_get_ext_d2i)                 \
    F(X509_REVOKED_new)                         \
    F(X509_REVOKED_set_revocationDate)          \
    F(X509_REVOKED_set_serialNumber)            \
    F(X509_set1_notAfter)                       \
    F(X509_set1_notBefore)                      \
    F(X509_set_ex_data)                         \
    F(X509_set_issuer_name)                     \
    F(X509_set_proxy_flag)                      \
    F(X509_set_proxy_pathlen)                   \
    F(X509_set_pubkey)                          \
    F(X509_set_serialNumber)                    \
    F(X509_set_subject_name)                    \
    F(X509_set_version)                         \
    F(X509_SIG_free)                            \
    F(X509_SIG_get0)                            \
    F(X509_SIG_getm)                            \
    F(X509_SIG_INFO_get)                        \
    F(X509_SIG_INFO_set)                        \
    F(X509_sign)                                \
    F(X509_signature_dump)                      \
    F(X509_signature_print)                     \
    F(X509_sign_ctx)                            \
    F(X509_SIG_new)                             \
    F(X509_STORE_add_cert)                      \
    F(X509_STORE_add_crl)                       \
    F(X509_STORE_add_lookup)                    \
    F(X509_STORE_CTX_cleanup)                   \
    F(X509_STORE_CTX_free)                      \
    F(X509_STORE_CTX_get0_cert)                 \
    F(X509_STORE_CTX_get0_chain)                \
    F(X509_STORE_CTX_get0_current_crl)          \
    F(X509_STORE_CTX_get0_current_issuer)       \
    F(X509_STORE_CTX_get0_param)                \
    F(X509_STORE_CTX_get0_parent_ctx)           \
    F(X509_STORE_CTX_get0_policy_tree)          \
    F(X509_STORE_CTX_get0_store)                \
    F(X509_STORE_CTX_get0_untrusted)            \
    F(X509_STORE_CTX_get1_certs)                \
    F(X509_STORE_CTX_get1_chain)                \
    F(X509_STORE_CTX_get1_crls)                 \
    F(X509_STORE_CTX_get1_issuer)               \
    F(X509_STORE_CTX_get_by_subject)            \
    F(X509_STORE_CTX_get_cert_crl)              \
    F(X509_STORE_CTX_get_check_crl)             \
    F(X509_STORE_CTX_get_check_issued)          \
    F(X509_STORE_CTX_get_check_policy)          \
    F(X509_STORE_CTX_get_check_revocation)      \
    F(X509_STORE_CTX_get_cleanup)               \
    F(X509_STORE_CTX_get_current_cert)          \
    F(X509_STORE_CTX_get_error)                 \
    F(X509_STORE_CTX_get_error_depth)           \
    F(X509_STORE_CTX_get_ex_data)               \
    F(X509_STORE_CTX_get_explicit_policy)       \
    F(X509_STORE_CTX_get_get_crl)               \
    F(X509_STORE_CTX_get_get_issuer)            \
    F(X509_STORE_CTX_get_lookup_certs)          \
    F(X509_STORE_CTX_get_lookup_crls)           \
    F(X509_STORE_CTX_get_num_untrusted)         \
    F(X509_STORE_CTX_get_obj_by_subject)        \
    F(X509_STORE_CTX_get_verify)                \
    F(X509_STORE_CTX_get_verify_cb)             \
    F(X509_STORE_CTX_init)                      \
    F(X509_STORE_CTX_new)                       \
    F(X509_STORE_CTX_purpose_inherit)           \
    F(X509_STORE_CTX_set0_crls)                 \
    F(X509_STORE_CTX_set0_dane)                 \
    F(X509_STORE_CTX_set0_param)                \
    F(X509_STORE_CTX_set0_trusted_stack)        \
    F(X509_STORE_CTX_set0_untrusted)            \
    F(X509_STORE_CTX_set0_verified_chain)       \
    F(X509_STORE_CTX_set_cert)                  \
    F(X509_STORE_CTX_set_current_cert)          \
    F(X509_STORE_CTX_set_default)               \
    F(X509_STORE_CTX_set_depth)                 \
    F(X509_STORE_CTX_set_error)                 \
    F(X509_STORE_CTX_set_error_depth)           \
    F(X509_STORE_CTX_set_ex_data)               \
    F(X509_STORE_CTX_set_flags)                 \
    F(X509_STORE_CTX_set_purpose)               \
    F(X509_STORE_CTX_set_time)                  \
    F(X509_STORE_CTX_set_trust)                 \
    F(X509_STORE_CTX_set_verify)                \
    F(X509_STORE_CTX_set_verify_cb)             \
    F(X509_STORE_free)                          \
    F(X509_STORE_get0_objects)                  \
    F(X509_STORE_get0_param)                    \
    F(X509_STORE_get_cert_crl)                  \
    F(X509_STORE_get_check_crl)                 \
    F(X509_STORE_get_check_issued)              \
    F(X509_STORE_get_check_policy)              \
    F(X509_STORE_get_check_revocation)          \
    F(X509_STORE_get_cleanup)                   \
    F(X509_STORE_get_ex_data)                   \
    F(X509_STORE_get_get_crl)                   \
    F(X509_STORE_get_get_issuer)                \
    F(X509_STORE_get_lookup_certs)              \
    F(X509_STORE_get_lookup_crls)               \
    F(X509_STORE_get_verify)                    \
    F(X509_STORE_get_verify_cb)                 \
    F(X509_STORE_load_locations)                \
    F(X509_STORE_lock)                          \
    F(X509_STORE_new)                           \
    F(X509_STORE_set1_param)                    \
    F(X509_STORE_set_cert_crl)                  \
    F(X509_STORE_set_check_crl)                 \
    F(X509_STORE_set_check_issued)              \
    F(X509_STORE_set_check_policy)              \
    F(X509_STORE_set_check_revocation)          \
    F(X509_STORE_set_cleanup)                   \
    F(X509_STORE_set_default_paths)             \
    F(X509_STORE_set_depth)                     \
    F(X509_STORE_set_ex_data)                   \
    F(X509_STORE_set_flags)                     \
    F(X509_STORE_set_get_crl)                   \
    F(X509_STORE_set_get_issuer)                \
    F(X509_STORE_set_lookup_certs)              \
    F(X509_STORE_set_lookup_crls)               \
    F(X509_STORE_set_purpose)                   \
    F(X509_STORE_set_trust)                     \
    F(X509_STORE_set_verify)                    \
    F(X509_STORE_set_verify_cb)                 \
    F(X509_STORE_unlock)                        \
    F(X509_STORE_up_ref)                        \
    F(X509_subject_name_cmp)                    \
    F(X509_subject_name_hash)                   \
    F(X509_subject_name_hash_old)               \
    F(X509_supported_extension)                 \
    F(X509_time_adj)                            \
    F(X509_time_adj_ex)                         \
    F(X509_to_X509_REQ)                         \
    F(X509_TRUST_add)                           \
    F(X509_TRUST_cleanup)                       \
    F(X509_trust_clear)                         \
    F(X509_trusted)                             \
    F(X509_TRUST_get0)                          \
    F(X509_TRUST_get0_name)                     \
    F(X509_TRUST_get_by_id)                     \
    F(X509_TRUST_get_count)                     \
    F(X509_TRUST_get_flags)                     \
    F(X509_TRUST_get_trust)                     \
    F(X509_TRUST_set)                           \
    F(X509_TRUST_set_default)                   \
    F(X509_up_ref)                              \
    F(X509V3_add1_i2d)                          \
    F(X509v3_add_ext)                           \
    F(X509v3_addr_add_inherit)                  \
    F(X509v3_addr_add_prefix)                   \
    F(X509v3_addr_add_range)                    \
    F(X509v3_addr_canonize)                     \
    F(X509v3_addr_get_afi)                      \
    F(X509v3_addr_get_range)                    \
    F(X509v3_addr_inherits)                     \
    F(X509v3_addr_is_canonical)                 \
    F(X509v3_addr_subset)                       \
    F(X509v3_addr_validate_path)                \
    F(X509v3_addr_validate_resource_set)        \
    F(X509V3_add_standard_extensions)           \
    F(X509V3_add_value)                         \
    F(X509V3_add_value_bool)                    \
    F(X509V3_add_value_bool_nf)                 \
    F(X509V3_add_value_int)                     \
    F(X509V3_add_value_uchar)                   \
    F(X509v3_asid_add_id_or_range)              \
    F(X509v3_asid_add_inherit)                  \
    F(X509v3_asid_canonize)                     \
    F(X509v3_asid_inherits)                     \
    F(X509v3_asid_is_canonical)                 \
    F(X509v3_asid_subset)                       \
    F(X509v3_asid_validate_path)                \
    F(X509v3_asid_validate_resource_set)        \
    F(X509V3_conf_free)                         \
    F(X509v3_delete_ext)                        \
    F(X509V3_EXT_add)                           \
    F(X509V3_EXT_add_alias)                     \
    F(X509V3_EXT_add_conf)                      \
    F(X509V3_EXT_add_list)                      \
    F(X509V3_EXT_add_nconf)                     \
    F(X509V3_EXT_add_nconf_sk)                  \
    F(X509V3_EXT_cleanup)                       \
    F(X509V3_EXT_conf)                          \
    F(X509V3_EXT_conf_nid)                      \
    F(X509V3_EXT_CRL_add_conf)                  \
    F(X509V3_EXT_CRL_add_nconf)                 \
    F(X509V3_EXT_d2i)                           \
    F(X509V3_extensions_print)                  \
    F(X509V3_EXT_get)                           \
    F(X509V3_EXT_get_nid)                       \
    F(X509V3_EXT_i2d)                           \
    F(X509V3_EXT_nconf)                         \
    F(X509V3_EXT_nconf_nid)                     \
    F(X509V3_EXT_print)                         \
    F(X509V3_EXT_print_fp)                      \
    F(X509V3_EXT_REQ_add_conf)                  \
    F(X509V3_EXT_REQ_add_nconf)                 \
    F(X509V3_EXT_val_prn)                       \
    F(X509V3_get_d2i)                           \
    F(X509v3_get_ext)                           \
    F(X509v3_get_ext_by_critical)               \
    F(X509v3_get_ext_by_NID)                    \
    F(X509v3_get_ext_by_OBJ)                    \
    F(X509v3_get_ext_count)                     \
    F(X509V3_get_section)                       \
    F(X509V3_get_string)                        \
    F(X509V3_get_value_bool)                    \
    F(X509V3_get_value_int)                     \
    F(X509V3_NAME_from_section)                 \
    F(X509V3_parse_list)                        \
    F(X509V3_section_free)                      \
    F(X509V3_set_conf_lhash)                    \
    F(X509V3_set_ctx)                           \
    F(X509V3_set_nconf)                         \
    F(X509V3_string_free)                       \
    F(X509_VAL_free)                            \
    F(X509_VAL_new)                             \
    F(X509_verify)                              \
    F(X509_verify_cert)                         \
    F(X509_verify_cert_error_string)            \
    F(X509_VERIFY_PARAM_add0_policy)            \
    F(X509_VERIFY_PARAM_add0_table)             \
    F(X509_VERIFY_PARAM_add1_host)              \
    F(X509_VERIFY_PARAM_clear_flags)            \
    F(X509_VERIFY_PARAM_free)                   \
    F(X509_VERIFY_PARAM_get0)                   \
    F(X509_VERIFY_PARAM_get0_name)              \
    F(X509_VERIFY_PARAM_get0_peername)          \
    F(X509_VERIFY_PARAM_get_auth_level)         \
    F(X509_VERIFY_PARAM_get_count)              \
    F(X509_VERIFY_PARAM_get_depth)              \
    F(X509_VERIFY_PARAM_get_flags)              \
    F(X509_VERIFY_PARAM_get_hostflags)          \
    F(X509_VERIFY_PARAM_get_inh_flags)          \
    F(X509_VERIFY_PARAM_get_time)               \
    F(X509_VERIFY_PARAM_inherit)                \
    F(X509_VERIFY_PARAM_lookup)                 \
    F(X509_VERIFY_PARAM_move_peername)          \
    F(X509_VERIFY_PARAM_new)                    \
    F(X509_VERIFY_PARAM_set1)                   \
    F(X509_VERIFY_PARAM_set1_email)             \
    F(X509_VERIFY_PARAM_set1_host)              \
    F(X509_VERIFY_PARAM_set1_ip)                \
    F(X509_VERIFY_PARAM_set1_ip_asc)            \
    F(X509_VERIFY_PARAM_set1_name)              \
    F(X509_VERIFY_PARAM_set1_policies)          \
    F(X509_VERIFY_PARAM_set_auth_level)         \
    F(X509_VERIFY_PARAM_set_depth)              \
    F(X509_VERIFY_PARAM_set_flags)              \
    F(X509_VERIFY_PARAM_set_hostflags)          \
    F(X509_VERIFY_PARAM_set_inh_flags)          \
    F(X509_VERIFY_PARAM_set_purpose)            \
    F(X509_VERIFY_PARAM_set_time)               \
    F(X509_VERIFY_PARAM_set_trust)              \
    F(X509_VERIFY_PARAM_table_cleanup)          \
    /**/

#define SANDSTONE_SSL_FUNCTIONS(F)              \
    SANDSTONE_SSL_AES_FUNCTIONS(F)              \
    SANDSTONE_SSL_BF_FUNCTIONS(F)               \
    SANDSTONE_SSL_CMAC_FUNCTIONS(F)             \
    SANDSTONE_SSL_EVP_FUNCTIONS(F)              \
    SANDSTONE_SSL_HMAC_FUNCTIONS(F)             \
    SANDSTONE_SSL_GENERIC_FUNCTIONS(F)          \
    SANDSTONE_SSL_MD5_FUNCTIONS(F)              \
    SANDSTONE_SSL_RSA_FUNCTIONS(F)              \
    SANDSTONE_SSL_SHA_FUNCTIONS(F)              \
    /**/

# define s_SSL_set_max_cert_list(ssl,m) \
        s_SSL_ctrl(ssl,SSL_CTRL_SET_MAX_CERT_LIST,m,NULL)


#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#ifdef SANDSTONE_OPENSSL_LINKED
static constexpr bool OpenSSLWorking = true;
#  define DECLARE_FUNCTIONS(Fn)     static constexpr auto s_ ## Fn = Fn;
#else
extern bool OpenSSLWorking;
#  define DECLARE_FUNCTIONS(Fn)     extern __attribute__((visibility("hidden"))) decltype(&Fn) s_ ## Fn;
#endif

SANDSTONE_SSL_FUNCTIONS(DECLARE_FUNCTIONS)
void sandstone_ssl_init();

#undef DECLARE_FUNCTIONS
#pragma GCC diagnostic pop

#endif // SANDSTONE_SSL_H
